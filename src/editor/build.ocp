
begin program "new_exercise"
  requires = [
    "ezjsonm"
    "grading-jsoo"
    "ace"
    "learnocaml-repository"
    "learnocaml-app-common"
    "learnocaml-toplevel"
    "jsutils"
    "ppx_metaquot_lib"
    "js_of_ocaml.ppx"
  ]
  files = [
    "new_exercise.ml" (pp = camlp4_js )
  ]
    build_rules = [
    "%{new_exercise_FULL_DST_DIR}%/new_exercise.js" (
      build_target = true
      sources = %byte_exe( p = "new_exercise" )
      commands = [ {
        "js_of_ocaml"
           "+weak.js"
           "+cstruct/cstruct.js"
           "%{ace_FULL_SRC_DIR}%/ace_bindings.js"            
           %byte_exe( p = "new_exercise" )
      } ]
    )
  ]
end

begin program "editor"
  requires = [
    "ezjsonm"
    "grading-jsoo"
    "ace"
    "learnocaml-repository"
    "learnocaml-app-common"
    "learnocaml-toplevel"
  ]
  files = [
    "editor.ml" ( pp = camlp4_js )
  ]
  build_rules = [
    "%{editor_FULL_DST_DIR}%/editor.js" (
      build_target = true
      sources = %byte_exe( p = "editor" )
      commands = [ {
        "js_of_ocaml"
           "+weak.js"
           "+cstruct/cstruct.js"
           "%{ace_FULL_SRC_DIR}%/ace_bindings.js"
           %byte_exe( p = "editor" )
      } ]
    )
  ]
end


